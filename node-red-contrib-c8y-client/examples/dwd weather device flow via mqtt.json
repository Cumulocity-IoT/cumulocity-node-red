[
    {
        "id": "1bb68034.fc746",
        "type": "tab",
        "label": "MQTT c8y",
        "disabled": false,
        "info": ""
    },
    {
        "id": "35195b50.2bd384",
        "type": "function",
        "z": "1bb68034.fc746",
        "name": "transform Precipitation",
        "func": "return {payload: '200,c8y_PrecipitationMeasurement,P,' + msg.payload.precipitation_perc + ',\"%\"'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 540,
        "wires": [
            [
                "5d817a8.1fe1784"
            ]
        ]
    },
    {
        "id": "2578e5d9.2d1d6a",
        "type": "mqtt in",
        "z": "1bb68034.fc746",
        "name": "",
        "topic": "s/e",
        "qos": "2",
        "datatype": "auto",
        "broker": "37bda142.97ef7e",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "9fd1cd55.fd112"
            ]
        ]
    },
    {
        "id": "9fd1cd55.fd112",
        "type": "debug",
        "z": "1bb68034.fc746",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "true",
        "targetType": "full",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 290,
        "y": 680,
        "wires": []
    },
    {
        "id": "4c89438a.eea304",
        "type": "function",
        "z": "1bb68034.fc746",
        "name": "transform windspeed",
        "func": "return {payload: '200,c8y_WindspeedMeasurement,W,' + msg.payload.windspeed + ',\"m/s\"'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 500,
        "wires": [
            [
                "5d817a8.1fe1784"
            ]
        ]
    },
    {
        "id": "e9950af1.9d68d",
        "type": "dwdweather",
        "z": "1bb68034.fc746",
        "name": "",
        "mosmixStation": "10400",
        "lookAheadHours": "0",
        "additionalFields": "",
        "repeat": "0",
        "topic": "",
        "x": 690,
        "y": 520,
        "wires": [
            [
                "abba9333.d7ba5",
                "74ab0bf5.92825c",
                "4c89438a.eea304",
                "35195b50.2bd384",
                "7519f147.bbd938",
                "34ea0e08.c7be3a"
            ]
        ]
    },
    {
        "id": "4288722.59a468c",
        "type": "inject",
        "z": "1bb68034.fc746",
        "name": "Trigger measurement creation every 1 minute",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "10",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 280,
        "y": 520,
        "wires": [
            [
                "e9950af1.9d68d"
            ]
        ]
    },
    {
        "id": "5d817a8.1fe1784",
        "type": "mqtt out",
        "z": "1bb68034.fc746",
        "name": "cumulocity",
        "topic": "s/us",
        "qos": "",
        "retain": "",
        "broker": "37bda142.97ef7e",
        "x": 1530,
        "y": 520,
        "wires": []
    },
    {
        "id": "7519f147.bbd938",
        "type": "function",
        "z": "1bb68034.fc746",
        "name": "transform Winddirection",
        "func": "return {payload: '200,c8y_WinddirectionMeasurement,WD,' + msg.payload.winddirection + ',\"Â°\"'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 580,
        "wires": [
            [
                "5d817a8.1fe1784"
            ]
        ]
    },
    {
        "id": "34ea0e08.c7be3a",
        "type": "function",
        "z": "1bb68034.fc746",
        "name": "transform Precipitation",
        "func": "return {payload: '200,c8y_PrecipitationNext24hMeasurement,PN24,' + msg.payload.precipitationNext24h + ',\"%\"'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 620,
        "wires": [
            [
                "5d817a8.1fe1784"
            ]
        ]
    },
    {
        "id": "abba9333.d7ba5",
        "type": "function",
        "z": "1bb68034.fc746",
        "name": "transform temperature",
        "func": "return {payload: '211,' + msg.payload.tempc};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 420,
        "wires": [
            [
                "5d817a8.1fe1784"
            ]
        ]
    },
    {
        "id": "74ab0bf5.92825c",
        "type": "function",
        "z": "1bb68034.fc746",
        "name": "transform humidity",
        "func": "return {payload: '200,c8y_HumidityMeasurement,H,' + msg.payload.humidity + ',\"%RH\"'};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1050,
        "y": 460,
        "wires": [
            [
                "5d817a8.1fe1784"
            ]
        ]
    },
    {
        "id": "2b3df8f.e0c9908",
        "type": "inject",
        "z": "1bb68034.fc746",
        "name": "Create Device",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "100,\"MQTT Node RED\",\"node-red-ms-device\"",
        "payloadType": "str",
        "x": 1060,
        "y": 300,
        "wires": [
            [
                "5d817a8.1fe1784"
            ]
        ]
    },
    {
        "id": "37bda142.97ef7e",
        "type": "mqtt-broker",
        "name": "ms creds",
        "broker": "cumulocity",
        "port": "1883",
        "clientid": "node-red-ms",
        "usetls": false,
        "compatmode": false,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "credentials": {
            "user": "$(MQTT_USER)",
            "password": "$(MQTT_PASSWORD)"
        }
    }
]